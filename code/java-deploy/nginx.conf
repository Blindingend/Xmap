worker_processes auto;

error_log /var/log/nginx/error.log info;

events {
    worker_connections  1024;
}

stream {
    # upstream 块
    # upstream 块定义了一个上游服务器的集群，便于反向代理中的 proxy_pass 使用
    upstream backend {
        # 使用一致性hash算法，根据客户端ip映射到合适的节点
        # hash $remote_addr consistent;
        # 默认轮询
        # server 配置项
        # server 配置项指定了一台上游服务器的名字，这个名字可以是域名、IP地址端口、UNIX句柄等
        # 其后还可以跟参数 weight、max_fails等
        server node1:8080            weight=5 max_fails=3 fail_timeout=30s;
        server node2:8080            weight=5 max_fails=3 fail_timeout=30s;
        server node3:8080            weight=5 max_fails=3 fail_timeout=30s;
    }

    upstream dns {
       server 192.168.0.1:53535;
    }

    # server 块中的配置项
    # listen：监听指定端口
    # proxy_pass：将TCP连接及数据收发转向到指定上游服务器
    # proxy_timeout：距离上一次成功访问（连接或读写）上游服务器的时间超过了指定时间就判定为超时，断开此连接
    # proxy_connect_timeout：nginx连接上游服务器超时的时间
    server {
        listen 8080;
        proxy_connect_timeout 1s;
        proxy_timeout 3s;
        proxy_pass backend;
    }

    server {
        listen 127.0.0.1:53 udp;
        proxy_responses 1;
        proxy_timeout 20s;
        proxy_pass dns;
    }

    server {
        listen [::1]:8080;
        proxy_pass unix:/tmp/stream.socket;
    }
}