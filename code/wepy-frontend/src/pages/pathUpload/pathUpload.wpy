<style>
  .mainContainer{
    background: linear-gradient(0reg, #fefefe, #f0f0f0);
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .pathDisplay{
    width: 750rpx;
    height: 65vh;
    border-bottom: #000000;
    z-index: -1;
    /*box-shadow: 0rpx -12rpx 24rpx -14rpx #888888 inset;*/
  }

  .container {
    width: 750rpx;
    height: 35vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    /*filter:drop-shadow(0rpx 4rpx 24rpx #888888);*/
    border-radius: 64rpx 64rpx 0rpx 0rpx;
  }
  .currentSteps{
    font-size: 100rpx;
    font-weight: bold;
    color: #2c2c2c;
  }
  .addInfo{
    width: 750rpx;
    height: 140rpx;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
  }

  .addComment{
    margin-right: 102.5rpx;
    width: 110rpx;
    height: 110rpx;
    border-radius: 50%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    background-color: #90b3d0;
    color: #FEFEFE;
  }
  .tapedAddComment{
    background-color: #90b3d0;
  }

  .addImage{
    margin-left: 102.5rpx;
    width: 110rpx;
    height: 110rpx;
    border-radius: 50%;
    background-color: #90b3d0;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }

  .pause{
    border-radius: 50%;
    width: 140rpx;
    height: 140rpx;
  }
  .tappedPause{
    background-color: #e4e4e4;
  }

  .pause image{
    width: 140rpx;
    height: 140rpx;
  }

  .controller{
    width: 750rpx;
    height: 120rpx;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
  }


  .endRecord{
    width: 200rpx;
    height: 90rpx;
    border-radius: 16rpx;
    background-color: #F2393C;
    color: #FEFEFE;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }
  .tapedEnd{
    background-color: #df3438;
  }

</style>

<template>
  <view class="mainContainer">
    <scroll-view enable-back-to-top	scroll-with-animation scroll-top="{{scrollHeight}}" scroll-y class="pathDisplay">
        <PathDisplay :pathArray.sync="pathArray"/>
    </scroll-view>
    <view class="container">
      <view class="currentSteps">
        {{steps}} 步
      </view>
      <view class="addInfo">
        <!--add comment for path-->
        <view class="addComment" hover-class="tapedAddComment" hover-stay-time="100" @tap="comment">
          <image mode="widthFix" style="width: 60rpx;height: 60rpx;margin-top: 6rpx" src="../../icons/comment.svg"></image>
        </view>
        <!--start and pause-->
        <view class="pause" hover-class="tappedPause" hover-stay-time='100' @tap="record">
          <image mode="widthFix" style="margin-left: 10rpx" src="../../icons/start.svg" wx:if="{{recordButton !== '暂停记录'}}"></image>
          <image mode="widthFix" src="../../icons/pause.svg" wx:if="{{recordButton === '暂停记录'}}"></image>
        </view>
        <!--add image to path-->
        <view class="addImage" @tap="takePhoto">
          <view>
            <image mode="widthFix" style="width: 60rpx;height: 60rpx;margin-top: 6rpx" src="../../icons/camera.svg"></image>
          </view>
        </view>
      </view>
      <view class="controller">
        <!--end record and submit-->
        <view class="endRecord" hover-class="tapedEnd" hover-stay-time="100" @tap="done">
          <image mode="widthFix" style="width: 60rpx;height: 60rpx" src="../../icons/endwhite.svg"></image>
          <view style="margin-left: 10rpx">结束</view>
        </view>
      </view>
    </view>
    <modal hidden="{{hiddenComment}}" title="请输入注释" confirm-text="提交" cancel-text="取消" bindcancel="commentCancel"
           bindconfirm="commentConfirm">
      <input value="{{comment}}" bindinput="bindCommentInput" type='text' placeholder="请输入内容"/>
    </modal>

    <modal hidden="{{hiddenPathName}}" title="请输入路线名字" confirm-text="提交" cancel-text="取消" bindcancel="pathNameCancel"
           bindconfirm="pathNameConfirm">
      <input value="{{pathName}}" bindinput="bindPathNameInput" type='text' placeholder="请输入内容"/>
    </modal>

  </view>
</template>

<script>
  import wepy from 'wepy';
  import pathDisplay from '../../components/pathDisplay'
  import {httpHead} from '../../properties/Const'

  export default class PathUpload extends wepy.page {
    components = {
      PathDisplay: pathDisplay
    };

    data = {
      scrollHeight: 0,
      direction: null,
      recordButton: "开始记录",
      pathArray: [],
      imgArray: [],
      curves: 0,
      steps: 0,
      allsteps: 0,
      xyz: [1, 1],
      tempFilePath: "",
      comment: "",
      hiddenComment: true,

      hiddenPathName: true,
      pathName: "",

      origin: "",
      end: "",
      img: "",
    };

    watch = {
      pathArray (newPathArray,oldPathArray){
        this.scrollHeight += 1000;
        wx.vibrateShort();
      }
    };

    methods = {
      record() {
        wx.vibrateShort();
        if (this.recordButton === "暂停记录") {
          this.recordButton = "继续记录";
          this.xyz = [1, 1];
          this.direction = null;
          wepy.stopAccelerometer({});
          wepy.stopCompass({});
        }
        else {
          this.recordButton = "暂停记录";
          wepy.startAccelerometer({});
          wepy.startCompass({});
        }
      },

      async takePhoto() {
        wx.vibrateShort();
        this.recordButton = "开始记录";
        wepy.stopAccelerometer({});
        wepy.stopCompass({});
        try {
          let imgres = await wepy.chooseImage({
            count: 1, // 默认9
            sizeType: ['compressed'],  // 可以指定是原图还是压缩图，默认二者都有}
            sourceType: ['camera','album']
        });

          console.log(imgres);
          let uploadres = await wepy.uploadFile({
            url: httpHead + '/upload',
            filePath: imgres.tempFilePaths[0],
            name: 'file',
            formData: {
              'user': 'woshiqiangmima'
            }});
          console.log(uploadres);
          let data = JSON.parse(uploadres.data);
          if (data.code === 200) {
            this.imgArray.push(data.message);
          }
          else {
            this.imgArray.push("");
          }
          if(this.steps !== 0)
          {
            this.pathArray.push({"type": 'actionS', "message": this.steps + ""});
          }
          this.pathArray.push({"type": 'img', "message": imgres.tempFilePaths[0]});
          this.allsteps += this.steps;
          this.steps = 0;
          this.$apply();
        }catch (e){
          console.log(e);
        }
      },

      //点击注释按钮
      comment() {
        wx.vibrateShort();
        this.recordButton = "开始记录";
        wepy.stopAccelerometer({});
        wepy.stopCompass({});
        this.hiddenComment = false;
      },

      //点击结束按钮，弹出确认窗，上传路线
      done() {
        if (this.pathArray.length === 0)
        {
          wx.showToast({
            title: '路线内容为空',
            icon: 'none',
          });
          return;
        }
        this.recordButton = "开始记录";
        wepy.stopAccelerometer({});
        wepy.stopCompass({});
        this.hiddenPathName = false;
        this.pathName = "";
      },

      bindPathNameInput(e) {
        this.pathName = e.detail.value;
      },

      //取消路线名字输入（取消上传）
      pathNameCancel() {
        this.hiddenPathName = true;
        this.pathName = "";
      },

      //提交路线名字
      async pathNameConfirm() {
        if (this.pathName === "") {
          wx.showToast({
            title: '名字不能为空',
            icon: 'none',
          });
          return;
        }
        this.hiddenPathName = true;
        let content = "请确认路线制作完成，点击确定上传"
        if (this.origin === null && this.end === null) {
          content = "该路线未绑定任何点位，是否继续上传？";
        }
        try {
          let modal = await wepy.showModal({
            title: '上传路线',
            content: content
          })
          if (modal.cancel) {
            console.log('用户点击取消')
            return;
          }
          wx.showLoading({
            title: '上传中',
          })
          let pathContent = [];
          let rawContent = this.pathArray;
          let imgArray = this.imgArray;
          let j = 0;
          for (let i = 0; i < rawContent.length; i++) {
            if (rawContent[i].type === 'img') {
              if (imgArray[j] === "") {
                wx.hideLoading();
                wx.showToast({
                  title: '网络异常',
                  icon: 'none',
                });
                return;
              }
              pathContent.push({type: "img", message: imgArray[j]});
              j++;
            }
            else {
              pathContent.push(rawContent[i]);
            }
          }

          let res = await wepy.request({
            url: httpHead + '/path' + '?author=' + this.$parent.globalData.userInfo
            + '&buildingId=' + this.$parent.globalData.building.id +
            (this.origin !== null ? ('&origin=' + this.origin.id) : "")
            + (this.end !== null ? ('&end=' + this.end.id) : ""),
            method: 'POST',
            header: {
              'content-type': 'application/json'
            },
            data: {
              img: this.img,
              name: this.pathName,
              steps: this.allsteps,
              curves: this.curves,
              contents: pathContent
            }
          })
          console.log(res);
          wx.hideLoading();
          wx.showToast({
            title: '上传成功',
            icon: 'none',
          });
          wepy.navigateBack({
            delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
          });
        } catch (e) {
          console.log(e);
          wx.hideLoading();
          wx.showToast({
            title: '网络异常',
            icon: 'none',
          });
        }
      },

      //监听注释输入
      bindCommentInput(e) {
        this.comment = e.detail.value;
      },

      //取消注释输入
      commentCancel() {
        this.hiddenComment = true;
        this.comment = "";
      },

      //提交注释
      commentConfirm() {
        this.pathArray.push({"type": 'comment', "message": this.comment});
        this.scrollHeight += 300;
        this.hiddenComment = true;
        this.comment = ""
      }
    }

    onReady() {
      if (!this.$parent.globalData.firstInPathUpload)
        return;
      this.$parent.globalData.firstInPathUpload = false;
      wepy.onAccelerometerChange((res) => {
        let first = this.xyz[0];
        let second = this.xyz[1];
        let third = Math.sqrt((Math.pow(res.y, 2),
          Math.pow(res.x, 2), Math.pow(res.z, 2)));
        if (second > first + 0.09 && second > third + 0.09) {
          this.steps++;
        }
        this.xyz = [second, third];
        this.$apply();
        console.log(this.xyz);
      })
      wepy.onCompassChange((res) => {
        let direction = this.direction;
        if (direction == null) {
          direction = res.direction;
          this.direction = res.direction;
        }
        let directionSub = (direction - res.direction) * 2 * Math.PI / 360;
        let array = this.pathArray;
        let steps = this.steps;
        if (steps <= 1) {
          this.direction = (res.direction + direction) / 2;
          return;
        }
        let cal = Math.sin(directionSub);
        if (cal < 0.86 && cal > -0.86)
          return;

        let message, action;
        if (cal > 0.86) {
          message = "" + steps;
          action = "actionL";
        }
        else if (cal < -0.86) {
          message = "" + steps;
          action = "actionR";
        }
        this.curves++;
        array.push({"type": action, "message": message});
        this.allsteps += steps;
        this.steps = 0;
        this.direction = res.direction;
        this.$apply();
      })
      wepy.stopAccelerometer({});
      wepy.stopCompass({});
    }

    onLoad(params, data) {
      try {
        let img = data.preload.img;
        this.origin = data.preload.origin;
        this.end = data.preload.end;
        console.log(img, this.origin, this.end)
        wx.uploadFile({
          url: httpHead + '/upload',
          filePath: img,
          name: 'file',
          formData: {
            'user': 'woshiqiangmima'
          },
          success: (res)=>{
            let data = JSON.parse(res.data);
            if (data.code === 200) {
              this.img = data.message;
            }
          }
        })
      }catch (e)
      {
        console.log(e);
      }
    }
    onUnload(){
      wepy.stopAccelerometer({});
      wepy.stopCompass({});
    }
  }
</script>


