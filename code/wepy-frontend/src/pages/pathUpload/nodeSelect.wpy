<style>
  .searchInput {
    margin-left: 75 rpx;
    margin-top: 3vh;
    width: 600 rpx;
    border-style: solid;
    border-color: #C0C0C0;
  }

  .nodeSelect {
    display: flex;
    align-items: center;
    flex-direction: row;
    width: 600 rpx;
    margin-left: 75 rpx;
    height: 100 rpx;
  }

</style>

<template>
  <view style="text-align: center">
    <view class="searchInput">
      <input bindinput="searchInput" name="input" placeholder="输入搜索信息"/>
    </view>
    <view>上传路线的起点终点（可选）</view>
    <view class="nodeSelect">
      <view style="width: 50%" wx:if="{{origin !== null}}">起点:{{origin.name}}
        <view @tap="nodeCancel" id="1">X</view>
      </view>
      <view style="width: 50%" wx:if="{{end !== null}}">终点:{{end.name}}
        <view @tap="nodeCancel" id="2">X</view>
      </view>
    </view>
    <scroll-view style="height: 750rpx" scroll-y bindscrolltolower="touchLow" class="nodeGroup">
      <repeat for="{{nodes}}" index="index" item="item">
        <Node :node="item"></Node>
      </repeat>
    </scroll-view>
    <view @tap="confirm">确认选择</view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import {httpHead, imgHead} from '../../properties/Const'
  import node from '../../components/node'

  export default class NodeViewer extends wepy.page {
    onLoad() {

    }

    onReady() {
      let data = {
        buildingId: this.$parent.globalData.building.id,
        name: "",
        skip: 0,
        limit: 5,
      }
      this.searchNode(data);
    }

    config = {
      navigationBarTitleText: 'NodeSelect',
    }
    data = {
      nodes: [],  // 查找到的点位
      origin: null,
      end: null,
      skip: 0,
      limit: 5,
      name: "",
    }
    components = {
      Node: node
    }

    async searchNode(data) {
      try {
        let res = await wepy.request({
          url: httpHead + '/nodes',
          data: data
        })
        console.log(res.data);
        if (res.data.nodes.length > 0) {
          let nodes = res.data.nodes.map((item) => {
            return {...item, img: imgHead + item.img}
          });
          if (data.skip === 0) {
            this.nodes = nodes;
          }
          else if (this.nodes.length === data.skip) {
            this.nodes = [...this.nodes, ...nodes];
          }
          this.skip += 5;
          this.$apply();
        }
        else {
          if (data.skip === 0) {
            wx.showToast({
              title: '没有满足条件的点位',
              icon: 'none',
            })
            this.nodes = [];
            this.$apply();
          }
          else {
            wx.showToast({
              title: '没有更多了',
              icon: 'none',
            })
          }
        }
      } catch (e) {
        console.log(e);
      }
    }

    methods = {
      async confirm() {
        try {
          wx.showToast({
            title: '拍摄路线照片',
            icon: 'none',
          });
          let res = await wepy.chooseImage({
            count: 1,
            sizeType: ['compressed'],
            sourceType: ['camera']
          })
          console.log("ok", res);
          this.$preload("img", res.tempFilePaths[0]);
          this.$preload("origin", this.origin);
          this.$preload("end", this.end);
          wx.navigateTo({
            url: '/pages/pathUpload/pathUpload',
          })
        } catch (e) {
          console.log(e);
        }
      },

      touchLow() {
        let data = {
          buildingId: this.$parent.globalData.building.id,
          name: this.name,
          skip: this.skip,
          limit: this.limit,
        }
        this.searchNode(data);
      },
      searchInput(e) {
        let value = e.detail.value;
        this.name = value;
        this.skip = 0;
        let data = {
          buildingId: this.$parent.globalData.building.id,
          name: value,
          skip: this.skip,
          limit: this.limit,
        }
        this.searchNode(data);
      },

      nodeCancel(e) {
        let id = e.target.id;
        if (id === "1") {
          this.origin = null;
          this.end = null;
        }
        else {
          this.end = null;
        }
      }
    }

    events = {
      'tap-Node': (node, $event) => {
        if (this.origin === null) {
          this.origin = node;
        }
        else {
          if (this.origin.id !== node.id) {
            this.end = node;
          }
          else {
            wx.showToast({
              title: '起点终点不能相同',
              icon: 'none',
            })
          }
        }
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`);
        console.log("node", node);
        //$event.$destroy();
      }
    }
  }
</script>
