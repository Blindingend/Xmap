<style>
  .tab{
    margin-left: 34rpx;
    margin-top: 1vh;
    left: 34rpx;
    top: 180rpx;
    width: 682rpx;
    height: 100rpx;
    line-height: 40rpx;
    border-radius:16rpx;
    background-color: rgb(242, 242, 242);
    text-align: center;
    display: flex;
    flex-direction: row;
  }


  .mynode{
    border-radius: 16rpx 0rpx 0rpx 16rpx;
    display: flex;
    flex-direction: column;
  }

  .mypath{
    border-radius: 0rpx 16rpx 16rpx 0rpx;
  }

  .tabtext{
    margin-top: 28rpx;
    color: #fefefe;
    font-size: 32rpx;
  }


  .selected{
    width: 341rpx;
    text-align: center;
    background-color: #1256be;
  }
  .default{
    width: 341rpx;
    text-align: center;
    background-color: #1564de;
  }

  .tabcontent{
    margin-top: 1vh;
    width: 750rpx;
    height: 70vh;
  }

  .show{display: block;padding-bottom:42px;}

  .hidden{display: none;padding-bottom:42px;}

</style>

<template>
  <view class="mine">
    <view class="tab">
      <view class="mynode {{select === '0' ?'selected':'default'}}" id="0" @tap="select">
        <view class="tabtext" id="0" >收藏点位</view>
      </view>
      <view class="mypath {{select === '1' ? 'selected':'default'}}" id="1" @tap="select">
        <view class="tabtext" id="1" >收藏路线</view>
      </view>
    </view>
      <view class="tabcontent" wx:if="{{select === '0'}}">
        <scroll-view scroll-y enable-back-to-top="true" bindscrolltolower="nodeTouchEnd" class="nodeView">
          <repeat for="{{nodeList}}" key="index" item="item" index="index">
            <view style="height: 132rpx; margin-top: 1vh; margin-left: -20rpx">
              <SwipeDelete :swipeData="item" @delItem.user="handleDelItem">
                <view  class="node">
                  <view class="nodeimg">
                    <image mode="aspectFill" src="{{item.img}}" />
                  </view>
                  <view class="nodename" >{{item.name}}</view>
                </view>
              </SwipeDelete>
            </view>
          </repeat>
        </scroll-view>
      </view>
      <view class="tabcontent" wx:if="{{select === '1'}}">
        <scroll-view scroll-y enable-back-to-top="true" bindscrolltolower="pathTouchEnd" class="pathView">
          <repeat for="{{pathList}}" key="index" item="item" index="index">
            <view style="height: 200rpx; margin-top: 1vh; margin-left: -20rpx">
              <SwipeDelete1 :swipeData="item"  @delItem.user="handleDelItem">
                <view @tap = "notifi" class="path">
                  <view class="pathimg">
                    <image mode="aspectFill" src="{{item.img}}" />
                  </view>
                  <view>
                    <view class="pathname">{{item.name}}</view>
                    <view class="pathdetail">步数：{{item.steps}}  转弯数：{{item.curves}}</view>
                  </view>
                </view>
              </SwipeDelete1>
            </view>
          </repeat>
        </scroll-view>
      </view>
    </view>
</template>

<script>
  import wepy from 'wepy';
  import {httpHead, imgHead} from '../properties/Const'
  import Path from '../components/path';
  import Node from '../components/node';
  import swipeDelete from '../components/swipe-delete';

  export default class Collection extends wepy.page {
    onLoad() {
        this.searchNode(0);
        this.searchPath(0);
    }

    config = {
      navigationBarTitleText: "Collection"
    }

    data = {
      select:"0",
      pathList:[],
      nodeList:[],
      nodeSkip: 0,
      pathSkip: 0,
      limit: 5,
      name: "",
    }
    components = {
      Path: Path,
      Node: Node,
      SwipeDelete: swipeDelete,
      SwipeDelete1: swipeDelete
    }

    methods = {
      handleDelItem (itemData) {
        console.log(itemData);
        this.cancelCollection(itemData);
      },
      select(e){
        console.log(e);
        this.select = e.target.id;
      },

      pathTouchEnd(){
        this.searchPath(this.pathSkip);
      },
      nodeTouchEnd(){
        this.searchNode(this.nodeSkip);
      },
    }

    async searchPath(skip) {
      try {
        let res = await wepy.request({
          url: httpHead + '/favorite/path',
          data: {
            authorId: this.$parent.globalData.userInfo,
            pathName: this.name,
            skip: skip,
            limit: this.limit,
          }
        })
        console.log(res.data);
        let paths = res.data.paths.map((item) => {
          return {...item, img: imgHead + item.img}
        });
        if (paths.length > 0) {
          if (this.pathSkip === 0) {
            this.pathList = paths;
          }
          else {
            this.pathList = [...this.pathList, ...paths];
          }
          this.pathSkip += 5;
        }
        else {
          if (skip === 0) {
            this.pathList = [];
            wx.showToast({
              title: '没有收藏路径',
              icon: 'none',
            })
          }
          else {
            wx.showToast({
              title: '没有更多了',
              icon: 'none',
            })
          }
        }
        this.$apply();
      }
      catch (e) {
        console.log(e);
      }
    }

    async searchNode(skip) {
      try {
        let res = await wepy.request({
          url: httpHead + '/favorite/nodes',
          data: {
            authorId: this.$parent.globalData.userInfo,
            nodeName: this.name,
            skip: skip,
            limit: this.limit,
          }
        })
        console.log(res.data);
        if (res.data.nodes.length > 0) {
          let nodes = res.data.nodes.map((item) => {
            return {...item, img: imgHead + item.img}
          });
          if (skip === 0) {
            this.nodeList = nodes;
          }
          else if (this.nodeList.length === skip) {
            this.nodeList = [...this.nodeList, ...nodes];
          }
          this.nodeSkip += this.limit;
        }
        else {
          if (skip === 0) {
            wx.showToast({
              title: '没有收藏点位',
              icon: 'none',
            })
            this.nodeList = [];
          }
          else {
            wx.showToast({
              title: '没有更多了',
              icon: 'none',
            })
          }
        }
        this.$apply();
      }
      catch (e) {
        console.log(e);
      }
    }

    async cancelCollection(item) {
      try{
        let res = await wepy.request({
          url: httpHead + "/favorite" + "?authorId=" + this.$parent.globalData.userInfo + "&favoriteId=" + item.id,
          method: "DELETE",
        })
      }catch (e)
      {
        wx.showToast({
          title: '删除失败，网络异常',
          icon: 'none',
        })
        console.log(e);
      }
    }
  }
</script>
