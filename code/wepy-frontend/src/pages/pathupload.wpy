<style>
  .functional {
    margin-top: 2vh;
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 5vh;
  }

  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
</style>

<template>
  <view class="container">
    <PathDisplay :pathArray.sync="pathArray"/>
    <view>
      <text>步数：{{steps}}</text>
      <text>方向：{{direction == null ? 0 : direction}}</text>
    </view>
    <view class='functional'>
      <button bindtap='record' class='Button'>
        {{recordButton}}
      </button>
      <button bindtap='takephoto' class='Button'>
        拍照
      </button>
      <button bindtap='comment' class='Button'>
        注释
      </button>
      <button bindtap='done' class='Button'>
        结束
      </button>
    </view>
    <modal hidden="{{hiddenComment}}" title="请输入注释" confirm-text="提交" cancel-text="取消" bindcancel="commentCancel"
           bindconfirm="commentConfirm">
      <input value="{{comment}}" bindinput="bindCommentInput" type='text' placeholder="请输入内容"/>
    </modal>

    <modal hidden="{{hiddenPathName}}" title="请输入路线名字" confirm-text="提交" cancel-text="取消" bindcancel="pathNameCancel"
           bindconfirm="pathNameConfirm">
      <input value="{{pathName}}" bindinput="bindPathNameInput" type='text' placeholder="请输入内容"/>
    </modal>

  </view>
</template>

<script>
  import wepy from 'wepy';
  import pathDisplay from '../components/pathDisplay'
  import {httpHead} from '../properties/Const'

  export default class PathUpload extends wepy.page {
    components = {
      PathDisplay: pathDisplay
    }
    data = {
      direction: null,
      recordButton: "开始记录",
      pathArray: [],
      imgArray: [],
      curves: 0,
      steps: 0,
      allsteps: 0,
      xyz: [1, 1],
      tempFilePath: "",
      comment: "",
      hiddenComment: true,

      hiddenPathName: true,
      pathName: "",

      origin: "",
      end: "",
    }
    watch = {
      tempFilePath(newValue, oldValue) {
        wepy.uploadFile({
          url: httpHead + '/upload',
          filePath: newValue,
          name: 'file',
          formData: {
            'user': 'woshiqiangmima'
          },
          success: (uploadres) => {
            console.log(uploadres)
            let data = JSON.parse(uploadres.data);
            if (data.code === 200) {
              this.imgArray.push(data.message);
            }
            else {
              this.imgArray.push("");
            }
          }
        });
      }
    }
    methods = {
      record() {
        if (this.recordButton === "暂停记录") {
          this.recordButton = "开始记录";
          this.xyz = [1, 1];
          this.direction = null;
          wepy.stopAccelerometer({});
          wepy.stopCompass({});
        }
        else {
          this.recordButton = "暂停记录";
          wepy.startAccelerometer({});
          wepy.startCompass({});
        }
      },

      takephoto() {
        this.recordButton = "开始记录";
        wepy.stopAccelerometer({});
        wepy.stopCompass({});
        wepy.chooseImage({
          count: 1, // 默认9
          sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有}
          success: (imgres) => {
            this.tempFilePath = imgres.tempFilePaths[0];
            this.pathArray.push({"type": 'action', "message": "直行" + this.steps + "步"})
            this.pathArray.push({"type": 'img', "message": this.tempFilePath});
            this.allsteps += this.steps;
            this.steps = 0;
            this.$apply();
          }
        });
      },

      //点击注释按钮
      comment() {
        this.recordButton = "开始记录";
        wepy.stopAccelerometer({});
        wepy.stopCompass({});
        this.hiddenComment = false;
      },

      //点击结束按钮，弹出确认窗，上传路线
      done() {
        this.recordButton = "开始记录";
        wepy.stopAccelerometer({});
        wepy.stopCompass({});
        this.hiddenPathName = false;
        this.pathName = "";
      },

      bindPathNameInput(e) {
        this.pathName = e.detail.value;
      }

      ,

      //取消路线名字输入（取消上传）
      pathNameCancel() {
        this.hiddenPathName = true;
        this.pathName = "";
      },

      //提交路线名字
      pathNameConfirm() {
        if (this.pathName === "") {
          wx.showToast({
            title: '名字不能为空',
            icon: 'none',
          });
          return;
        }
        let pathName = this.pathName;
        this.hiddenPathName = true;
        let content = "请确认路线制作完成，点击确定上传"
        if (this.origin === "" && this.end === "") {
          content = "该路线未绑定任何点位，是否继续上传？";
        }
        wepy.showModal({
          title: '上传路线',
          content: content,
          success:  (res)=>{
            if (res.confirm) {
              console.log('用户点击确定')
              wx.showLoading({
                title: '上传中',
              })

              let pathContent = [];
              let rawContent = this.pathArray;
              let imgArray = this.imgArray;
              let j = 0;
              for (let i = 0; i < rawContent.length; i++) {
                if (rawContent[i].type === 'img') {
                  if (imgArray[j] === "") {
                    wx.hideLoading();
                    wx.showToast({
                      title: '网络异常',
                      icon: 'none',
                    });
                    return;
                  }
                  let imgPath = imgArray[j];
                  j++;
                  pathContent.push({ type: "img", message: imgPath });
                }
                else {
                  pathContent.push(rawContent[i]);
                }
              }

              wepy.request({
                url: httpHead + '/path' + '?author=' + this.$parent.globalData.userInfo
                + '&buildingId=' + this.$parent.globalData.buildingId +
                '&origin=' + this.origin
                + '&end=' + this.end,
                method: 'POST',
                header: {
                  'content-type': 'application/json'
                },
                data: {
                  name: pathName,
                  steps: this.allsteps,
                  curves: this.curves,
                  contents: pathContent
                },
                success: (res) => {
                  console.log(res);
                  wx.hideLoading();
                  wx.showToast({
                    title: '上传成功',
                    icon: 'none',
                  });
                  this.pathArray = [];
                  this.imgArray = [];
                  this.steps = 0;
                  this.direction = null;
                  this.curves = 0;
                  this.allsteps = 0;
                  this.$apply();
                },
                fail: () => {
                  wx.hideLoading();
                  wx.showToast({
                    title: '网络异常',
                    icon: 'none',
                  });
                }
              })
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
          }
        })
        this.pathName = "";
      },

      //监听注释输入
      bindCommentInput(e) {
        this.comment = e.detail.value;
      }

      ,

      //取消注释输入
      commentCancel() {
        this.hiddenComment = true;
        this.comment = "";
      }

      ,

      //提交注释
      commentConfirm() {
        this.pathArray.push({"type": 'comment', "message": this.comment});
        this.hiddenComment = true;
        this.comment = ""
      }
    }

    onReady() {
      wepy.onAccelerometerChange((res) => {
        let first = this.xyz[0];
        let second = this.xyz[1];
        let third = Math.sqrt((Math.pow(res.y, 2),
          Math.pow(res.x, 2), Math.pow(res.z, 2)));
        if (second > first + 0.09 && second > third + 0.09) {
          this.steps++;
        }
        this.xyz = [second, third];
        this.$apply();
      })
      wepy.onCompassChange((res) => {
        let direction = this.direction;
        if (direction == null) {
          direction = res.direction;
          this.direction = res.direction;
        }
        let directionSub = (direction - res.direction) * 2 * Math.PI / 360;
        let array = this.pathArray;
        let steps = this.steps;
        if (steps <= 1) {
          this.direction = (res.direction + direction) / 2;
          return;
        }
        let cal = Math.sin(directionSub);
        if (cal < 0.86 && cal > -0.86)
          return;

        let message;
        if (cal > 0.86) {
          message = "走 " + steps + " 步, 左转";
        }
        else if (cal < -0.86) {
          message = "走 " + steps + " 步，右转";
        }
        this.curves++;
        array.push({"type": 'action', "message": message});
        this.allsteps += steps;
        this.steps = 0;
        this.direction = res.direction;
        this.$apply();
      })
      wepy.stopAccelerometer({});
      wepy.stopCompass({});
    }

    onLoad() {

    }
  }
</script>


